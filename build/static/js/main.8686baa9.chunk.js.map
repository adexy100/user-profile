{"version":3,"sources":["serviceWorker.js","components/Session/context.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/Session/withEmailVerification.js","components/navbar/signout.js","components/navbar/navbar.js","components/main/main.js","components/SignIn/socialLink.js","components/SignIn/index.js","components/SignUp/index.js","components/Messages/MessageItem.js","components/Messages/MessageList.js","components/Messages/Messages.js","components/Messages/index.js","components/home/home.js","components/admin/components/userlist.js","components/admin/admin.js","components/admin/components/userItem.js","components/PasswordForget/index.js","components/PasswordChange/index.js","components/account/index.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","AuthUserContext","React","createContext","FirebaseContext","withFirebase","Component","props","Consumer","firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignInWithGoogle","signInWithPopup","googleProvider","doSignInWithFacebook","facebookProvider","doSignInWithTwitter","twitterProvider","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doSendEmailVerification","currentUser","sendEmailVerification","url","doPasswordUpdate","updatePassword","onAuthUserListener","next","fallback","onAuthStateChanged","authUser","user","uid","once","then","snapshot","dbUser","val","roles","emailVerified","providerData","db","ref","users","message","messages","app","initializeApp","this","serverValue","database","ServerValue","emailAuthProvider","EmailAuthProvider","GoogleAuthProvider","FacebookAuthProvider","TwitterAuthProvider","withAuthentication","WithAuthentication","state","JSON","parse","localStorage","getItem","listener","setItem","stringify","setState","removeItem","Provider","value","withAuthorization","condition","WithAuthorization","history","push","compose","withRouter","withEmailVerification","WithEmailVerification","onSendEmailVerification","isSent","map","provider","providerId","includes","needsEmailVerification","type","onClick","disabled","NavigationAuth","to","NavigationNonAuth","Navbar","Header","src","alt","style","height","Main","bordered","justify","icon","HomeFilled","title","ERROR_MSG_ACCOUNT_EXISTS","SignInGoogleBase","onSubmit","event","socialAuthUser","set","username","displayName","error","catch","code","preventDefault","paddingLeft","SignInFacebookBase","additionalUserInfo","profile","name","SignInTwitterBase","SignInGoogle","SignInFacebook","SignInTwitter","SignInFormBase","handleFinish","values","console","log","paddingBottom","Text","underline","strong","fontSize","onFinish","Item","showIcon","rules","required","prefix","MailOutlined","placeholder","min","Password","LockOutlined","float","htmlType","width","SignInForm","SignUpFormBase","isAdmin","undefined","UserOutlined","hasFeedback","dependencies","getFieldValue","validator","rule","Promise","reject","resolve","valuePropName","SignUpForm","SignUpPage","MessageItem","onToggleEditMode","editMode","editText","text","onChangeEditText","target","onSaveEditText","onEditMessage","onRemoveMessage","onChange","userId","editedAt","MessageList","key","Messages","onListenForMessages","loading","orderByChild","limitToLast","limit","on","messageObject","messageList","Object","keys","onChangeText","onCreateMessage","createdAt","TIMESTAMP","messageSnapshot","remove","onNextPage","off","DesktopOutlined","UserList","usersObject","usersList","itemLayout","dataSource","renderItem","item","span","active","actions","pathname","Meta","description","keyboard","UserItem","params","id","ForgotPasswordBase","doPasswordRest","ForgotPassword","ForgotPasswordForm","INITIAL_STATE","passwordOne","passwordTwo","PasswordChangeForm","isInvalid","SIGN_IN_METHODS","LoginManagementBase","fetchSignInMethods","fetchSignInMethodsForEmail","activeSignInMethods","onSocialLoginLink","linkWithPopup","onDefaultLoginLink","credential","linkAndRetrieveDataWithCredential","onUnlink","unlink","signInMethod","onlyOneLeft","length","isEnabled","onLink","SocialLoginToggle","DefaultLoginToggle","LoginManagement","PasswordChange","exact","path","component","Home","Admin","AccountPage","SignInPage","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8686baa9.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nconst AuthUserContext = React.createContext(null);\r\n\r\nexport default AuthUserContext;\r\n","import React from 'react';\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n  <FirebaseContext.Consumer>\r\n    {firebase => <Component {...props} firebase={firebase} />}\r\n  </FirebaseContext.Consumer>\r\n);\r\n\r\nexport default FirebaseContext;\r\n","import app from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAD5R8Wn-RKGNq8ExZfS-8adyIoWYPCPD0\",\r\n  authDomain: \"user-login-30e9d.firebaseapp.com\",\r\n  databaseURL: \"https://user-login-30e9d.firebaseio.com\",\r\n  projectId: \"user-login-30e9d\",\r\n  storageBucket: \"user-login-30e9d.appspot.com\",\r\n  messagingSenderId: \"120838559628\",\r\n  appId: \"1:120838559628:web:cb3b9b3f5d66b8806028a9\",\r\n  measurementId: \"G-R2KQZP0HT5\"\r\n};\r\n\r\n\r\nclass Firebase {\r\n  constructor() {\r\n    app.initializeApp(firebaseConfig);\r\n\r\n    /* Helper */\r\n\r\n    this.serverValue = app.database.ServerValue;\r\n    this.emailAuthProvider = app.auth.EmailAuthProvider;\r\n\r\n    /* Firebase APIs */\r\n\r\n    this.auth = app.auth();\r\n    this.db = app.database();\r\n\r\n    /* Social Sign In Method Provider */\r\n\r\n    this.googleProvider = new app.auth.GoogleAuthProvider();\r\n    this.facebookProvider = new app.auth.FacebookAuthProvider();\r\n    this.twitterProvider = new app.auth.TwitterAuthProvider();\r\n  }\r\n\r\n  // *** Auth API ***\r\n\r\n  doCreateUserWithEmailAndPassword = (email, password) =>\r\n    this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n  doSignInWithEmailAndPassword = (email, password) =>\r\n    this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n  doSignInWithGoogle = () =>\r\n    this.auth.signInWithPopup(this.googleProvider);\r\n\r\n  doSignInWithFacebook = () =>\r\n    this.auth.signInWithPopup(this.facebookProvider);\r\n\r\n  doSignInWithTwitter = () =>\r\n    this.auth.signInWithPopup(this.twitterProvider);\r\n\r\n  doSignOut = () => this.auth.signOut();\r\n\r\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n\r\n  doSendEmailVerification = () =>\r\n    this.auth.currentUser.sendEmailVerification({\r\n      url: 'https://profile-user.netlify.app',\r\n    });\r\n\r\n  doPasswordUpdate = password =>\r\n    this.auth.currentUser.updatePassword(password);\r\n\r\n  // *** Merge Auth and DB User API *** //\r\n\r\n  onAuthUserListener = (next, fallback) =>\r\n    this.auth.onAuthStateChanged(authUser => {\r\n      if (authUser) {\r\n        this.user(authUser.uid)\r\n          .once('value')\r\n          .then(snapshot => {\r\n            const dbUser = snapshot.val();\r\n\r\n            // default empty roles\r\n            if (!dbUser.roles) {\r\n              dbUser.roles = {};\r\n            }\r\n\r\n            // merge auth and db user\r\n            authUser = {\r\n              uid: authUser.uid,\r\n              email: authUser.email,\r\n              emailVerified: authUser.emailVerified,\r\n              providerData: authUser.providerData,\r\n              ...dbUser,\r\n            };\r\n\r\n            next(authUser);\r\n          });\r\n      } else {\r\n        fallback();\r\n      }\r\n    });\r\n\r\n  // *** User API ***\r\n\r\n  user = uid => this.db.ref(`users/${uid}`);\r\n\r\n  users = () => this.db.ref('users');\r\n\r\n  // *** Message API ***\r\n\r\n  message = uid => this.db.ref(`messages/${uid}`);\r\n\r\n  messages = () => this.db.ref('messages');\r\n}\r\n\r\nexport default Firebase;","import FirebaseContext, { withFirebase } from './context';\r\nimport Firebase from './firebase';\r\n\r\nexport default Firebase;\r\n\r\nexport { FirebaseContext, withFirebase };\r\n","import React from 'react';\r\n\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst withAuthentication = Component => {\r\n  class WithAuthentication extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        authUser: JSON.parse(localStorage.getItem('authUser')),\r\n      };\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.onAuthUserListener(\r\n        authUser => {\r\n          localStorage.setItem('authUser', JSON.stringify(authUser));\r\n          this.setState({ authUser });\r\n        },\r\n        () => {\r\n          localStorage.removeItem('authUser');\r\n          this.setState({ authUser: null });\r\n        },\r\n      );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Provider value={this.state.authUser}>\r\n          <Component {...this.props} />\r\n        </AuthUserContext.Provider>\r\n      );\r\n    }\r\n  }\r\n\r\n  return withFirebase(WithAuthentication);\r\n};\r\n\r\nexport default withAuthentication;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst withAuthorization = (condition) => (Component) => {\r\n  class WithAuthorization extends React.Component {\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.onAuthUserListener(\r\n        (authUser) => {\r\n          if (!condition(authUser)) {\r\n            this.props.history.push('/signup');\r\n          }\r\n        },\r\n        () => this.props.history.push('/signin')\r\n      );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Consumer>\r\n          {(authUser) =>\r\n            condition(authUser) ? <Component {...this.props} /> : null\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      );\r\n    }\r\n  }\r\n\r\n  return compose(withRouter, withFirebase)(WithAuthorization);\r\n};\r\n\r\nexport default withAuthorization;\r\n","import React from 'react';\r\n\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst needsEmailVerification = authUser =>\r\n  authUser &&\r\n  !authUser.emailVerified &&\r\n  authUser.providerData\r\n    .map(provider => provider.providerId)\r\n    .includes('password');\r\n\r\nconst withEmailVerification = Component => {\r\n  class WithEmailVerification extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = { isSent: false };\r\n    }\r\n\r\n    onSendEmailVerification = () => {\r\n      this.props.firebase\r\n        .doSendEmailVerification()\r\n        .then(() => this.setState({ isSent: true }));\r\n    };\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Consumer>\r\n          {authUser =>\r\n            needsEmailVerification(authUser) ? (\r\n              <div>\r\n                {this.state.isSent ? (\r\n                  <p>\r\n                    E-Mail confirmation sent: Check your E-Mails (Spam\r\n                    folder included) for a confirmation E-Mail.\r\n                    Refresh this page once you confirmed your E-Mail.\r\n                  </p>\r\n                ) : (\r\n                  <p>\r\n                    Verify your E-Mail: Check your E-Mails (Spam folder\r\n                    included) for a confirmation E-Mail or send\r\n                    another confirmation E-Mail.\r\n                  </p>\r\n                )}\r\n\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={this.onSendEmailVerification}\r\n                  disabled={this.state.isSent}\r\n                >\r\n                  Send confirmation E-Mail\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <Component {...this.props} />\r\n            )\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      );\r\n    }\r\n  }\r\n\r\n  return withFirebase(WithEmailVerification);\r\n};\r\n\r\nexport default withEmailVerification;\r\n","import { Button } from 'antd';\r\nimport React from 'react';\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst SignOutButton = ({ firebase }) => {\r\n  return (\r\n    <Button type=\"primary\" onClick={firebase.doSignOut}>\r\n      Sign Out\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default withFirebase(SignOutButton);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Row, Col, Layout, Button } from 'antd';\r\nimport { AuthUserContext } from '../Session';\r\nimport SignOutButton from './signout';\r\n\r\nconst Navbar = () => (\r\n  <Layout.Header>\r\n    <Row>\r\n      <Col>\r\n        <NavLink to=\"/\">\r\n          <img src=\"favicon.ico\" alt=\"\" style={{ height: '30%' }} />\r\n        </NavLink>\r\n        <Button type=\"link\">\r\n          <NavLink to=\"/\">Main</NavLink>\r\n        </Button>\r\n      </Col>\r\n      <Col>\r\n        <AuthUserContext.Consumer>\r\n          {authUser =>\r\n            authUser ? (\r\n              <NavigationAuth authUser={authUser} />\r\n            ) : (\r\n              <NavigationNonAuth />\r\n            )\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      </Col>\r\n    </Row>\r\n  </Layout.Header>\r\n);\r\n\r\nconst NavigationAuth = ({ authUser }) => {\r\n  return (\r\n    <div>\r\n      <Button type=\"link\">\r\n        <NavLink to=\"/home\">Home</NavLink>\r\n      </Button>\r\n      <Button type=\"link\">\r\n        <NavLink to=\"/account\">Account</NavLink>\r\n      </Button>\r\n      {!!authUser.roles['ADMIN'] && (\r\n        <Button type=\"link\">\r\n          <NavLink to=\"/admin\">Admin</NavLink>\r\n        </Button>\r\n      )}\r\n      <SignOutButton />\r\n    </div>\r\n  );\r\n};\r\nconst NavigationNonAuth = () => {\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\">\r\n        <NavLink to=\"/signin\">sign In</NavLink>\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport { Card, Row, Result } from 'antd';\r\nimport { HomeFilled } from '@ant-design/icons';\r\n\r\nconst Main = () => (\r\n    <Card bordered={false}>\r\n      <Row justify=\"center\">\r\n        <Result icon={<HomeFilled />} title=\"This is Main home page \" />\r\n      </Row>\r\n    </Card>\r\n);\r\n\r\nexport default Main;\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n\r\nimport { withFirebase } from '../Firebase';\r\n\r\n\r\nconst ERROR_CODE_ACCOUNT_EXISTS =\r\n  'auth/account-exists-with-different-credential';\r\n\r\nconst ERROR_MSG_ACCOUNT_EXISTS = `\r\n  An account with an E-Mail address to\r\n  this social account already exists. Try to login from\r\n  this account instead and associate your social accounts on\r\n  your personal account page.\r\n`;\r\n\r\n\r\nclass SignInGoogleBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { error: null };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    this.props.firebase\r\n      .doSignInWithGoogle()\r\n      .then(socialAuthUser => {\r\n        // Create a user in your Firebase Realtime Database too\r\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\r\n          username: socialAuthUser.user.displayName,\r\n          email: socialAuthUser.user.email,\r\n          roles: {},\r\n        });\r\n      })\r\n      .then(() => {\r\n        this.setState({ error: null });\r\n        this.props.history.push('/home');\r\n      })\r\n      .catch(error => {\r\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\r\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\r\n        }\r\n\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const { error } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit} style={{ paddingLeft: '5%' }}>\r\n        <button type=\"submit\">Sign In with Google</button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n};\r\n\r\nclass SignInFacebookBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { error: null };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    this.props.firebase\r\n      .doSignInWithFacebook()\r\n      .then(socialAuthUser => {\r\n        // Create a user in your Firebase Realtime Database too\r\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\r\n          username: socialAuthUser.additionalUserInfo.profile.name,\r\n          email: socialAuthUser.additionalUserInfo.profile.email,\r\n          roles: {},\r\n        });\r\n      })\r\n      .then(() => {\r\n        this.setState({ error: null });\r\n        this.props.history.push('/home');\r\n      })\r\n      .catch(error => {\r\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\r\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\r\n        }\r\n\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const { error } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit} style={{ paddingLeft: '5%' }}>\r\n        <br />\r\n        <button type=\"submit\">Sign In with Facebook</button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n};\r\n\r\nclass SignInTwitterBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { error: null };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    this.props.firebase\r\n      .doSignInWithTwitter()\r\n      .then(socialAuthUser => {\r\n        // Create a user in your Firebase Realtime Database too\r\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\r\n          username: socialAuthUser.additionalUserInfo.profile.name,\r\n          email: socialAuthUser.additionalUserInfo.profile.email,\r\n          roles: {},\r\n        });\r\n      })\r\n      .then(() => {\r\n        this.setState({ error: null });\r\n        this.props.history.push('/home');\r\n      })\r\n      .catch(error => {\r\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\r\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\r\n        }\r\n\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const { error } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit} style={{ paddingLeft: '5%' }}>\r\n        <br />\r\n        <button type=\"submit\">Sign In with Twitter</button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n};\r\n\r\nconst SignInGoogle = compose(\r\n  withRouter,\r\n  withFirebase,\r\n)(SignInGoogleBase);\r\n\r\nconst SignInFacebook = compose(\r\n  withRouter,\r\n  withFirebase,\r\n)(SignInFacebookBase);\r\n\r\nconst SignInTwitter = compose(\r\n  withRouter,\r\n  withFirebase,\r\n)(SignInTwitterBase);\r\n\r\nexport { SignInGoogle, SignInFacebook, SignInTwitter };","import React, { Component } from 'react';\r\nimport { compose } from 'recompose';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { Card, Form, Input, Row, Typography, Button, Alert } from 'antd';\r\nimport { LockOutlined, MailOutlined } from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport { withFirebase } from '../Firebase';\r\nimport { SignInGoogle, SignInFacebook, SignInTwitter } from './socialLink';\r\n\r\nclass SignInFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n   this.state = { error: '' };\r\n  }\r\n\r\n  handleFinish = (values) => {\r\n    const { email, password } = values;\r\n\r\n    this.props.firebase\r\n      .doSignInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        this.props.history.push('/home');\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.setState({ error: error.code });\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <Card style={{ paddingLeft: '5%' }}>\r\n        <Row style={{ paddingBottom: '1%' }}>\r\n          <Typography.Text underline strong style={{ fontSize: '22px' }}>\r\n            Sign In\r\n          </Typography.Text>\r\n        </Row>\r\n        <Row>\r\n          <Form onFinish={this.handleFinish}>\r\n            {this.state.error !== '' ? (\r\n              <Form.Item>\r\n                <Alert message={this.state.error} type=\"error\" showIcon />\r\n              </Form.Item>\r\n            ) : null}\r\n            <Form.Item\r\n              name=\"email\"\r\n              rules={[\r\n                {\r\n                  type: 'email',\r\n                  message: 'The input is not valid E-mail!',\r\n                },\r\n                {\r\n                  required: true,\r\n                  message: 'Please input your E-mail!',\r\n                },\r\n              ]}\r\n            >\r\n              <Input prefix={<MailOutlined />} placeholder=\"E-mail\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please input your password!',\r\n                },\r\n                { min: 6, message: 'At least has 6 letters.' },\r\n              ]}\r\n            >\r\n              <Input.Password\r\n                prefix={<LockOutlined />}\r\n                placeholder=\"Password\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Link style={{ float: 'left' }} to=\"/forgotpassword\">\r\n                Forgot password?\r\n              </Link>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                style={{ width: '100%' }}\r\n              >\r\n                Sign In\r\n              </Button>\r\n              or&nbsp;\r\n              <Link to=\"/signup\">Don't have an account? Sign Up</Link>\r\n            </Form.Item>\r\n          </Form>\r\n        </Row>\r\n      </Card>\r\n    );\r\n  }\r\n};\r\n\r\nconst SignInForm = compose(\r\n  withRouter,\r\n  withFirebase,\r\n)(SignInFormBase);\r\n\r\nconst SignInPage = () => (\r\n  <div>\r\n    <SignInForm />\r\n    <SignInGoogle />\r\n    <SignInFacebook />\r\n    <SignInTwitter />\r\n  </div>\r\n);\r\n\r\n\r\nexport default withFirebase(SignInPage);","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\nimport {\r\n  Card,\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Typography,\r\n  Button,\r\n  Alert,\r\n  Checkbox,\r\n} from 'antd';\r\n\r\nimport { UserOutlined, LockOutlined, MailOutlined } from '@ant-design/icons';\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst SignUpPage = () => (\r\n  <div>\r\n    <SignUpForm />\r\n  </div>\r\n);\r\n\r\nclass SignUpFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n   this.state = { error: '' };\r\n  }\r\n\r\n  handleFinish = (values) => {\r\n    const { username, email, password, isAdmin } = values;\r\n    const roles = {};\r\n    if (isAdmin !== undefined) {\r\n      roles['ADMIN'] = 'ADMIN';\r\n    }\r\n\r\n    this.props.firebase\r\n      .doCreateUserWithEmailAndPassword(email, password)\r\n      .then((authUser) => {\r\n        return this.props.firebase.user(authUser.user.uid).set({\r\n          username,\r\n          email,\r\n          roles,\r\n        });\r\n      })\r\n      .then(() => {\r\n        return this.props.firebase.doSendEmailVerification();\r\n      })\r\n      .then(() => this.props.history.push('/home'))\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.setState({ error: error.code });\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <Card style={{ paddingLeft: '5%' }}>\r\n        <Row style={{ paddingBottom: '1%' }}>\r\n          <Typography.Text underline strong style={{ fontSize: '22px' }}>\r\n            Sign Up\r\n          </Typography.Text>\r\n        </Row>\r\n        <Row>\r\n          <Form onFinish={this.handleFinish}>\r\n            {this.state.error !== '' ? (\r\n              <Form.Item>\r\n                <Alert message={this.state.error} type=\"error\" showIcon />\r\n              </Form.Item>\r\n            ) : null}\r\n            <Form.Item\r\n              name=\"username\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please input your Username!',\r\n                },\r\n              ]}\r\n            >\r\n              <Input prefix={<UserOutlined />} placeholder=\"Username\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"email\"\r\n              rules={[\r\n                {\r\n                  type: 'email',\r\n                  message: 'The input is not valid E-mail!',\r\n                },\r\n                {\r\n                  required: true,\r\n                  message: 'Please input your E-mail!',\r\n                },\r\n              ]}\r\n            >\r\n              <Input prefix={<MailOutlined />} placeholder=\"E-mail\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please input your password!',\r\n                },\r\n                { min: 6, message: 'At least has 6 letters.' },\r\n              ]}\r\n              hasFeedback\r\n            >\r\n              <Input.Password\r\n                prefix={<LockOutlined />}\r\n                placeholder=\"Password\"\r\n              />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"confirm\"\r\n              dependencies={['password']}\r\n              hasFeedback\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please confirm your password!',\r\n                },\r\n                { min: 6, message: 'At least has 6 letters.' },\r\n                ({ getFieldValue }) => ({\r\n                  validator(rule, value) {\r\n                    if (!value || getFieldValue('password') === value) {\r\n                      return Promise.resolve();\r\n                    }\r\n                    return Promise.reject(\r\n                      'The two passwords that you entered do not match!'\r\n                    );\r\n                  },\r\n                }),\r\n              ]}\r\n            >\r\n              <Input.Password\r\n                prefix={<LockOutlined />}\r\n                placeholder=\"Confirm password\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item name=\"isAdmin\" valuePropName=\"checked\">\r\n              <Checkbox>Admin</Checkbox>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Link style={{ float: 'left' }} to=\"/forgotpassword\">\r\n                Forgot password?\r\n              </Link>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                style={{ width: '100%' }}\r\n              >\r\n                Register\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Row>\r\n      </Card>\r\n    );\r\n  }\r\n};\r\n\r\n\r\nconst SignUpForm = compose(\r\n  withRouter,\r\n  withFirebase,\r\n)(SignUpFormBase);\r\n\r\nexport default SignUpPage;\r\n\r\nexport { SignUpForm };\r\n","import React, { Component } from 'react';\r\n\r\nclass MessageItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      editMode: false,\r\n      editText: this.props.message.text,\r\n    };\r\n  }\r\n\r\n  onToggleEditMode = () => {\r\n    this.setState(state => ({\r\n      editMode: !state.editMode,\r\n      editText: this.props.message.text,\r\n    }));\r\n  };\r\n\r\n  onChangeEditText = event => {\r\n    this.setState({ editText: event.target.value });\r\n  };\r\n\r\n  onSaveEditText = () => {\r\n    this.props.onEditMessage(this.props.message, this.state.editText);\r\n\r\n    this.setState({ editMode: false });\r\n  };\r\n\r\n  render() {\r\n    const { authUser, message, onRemoveMessage } = this.props;\r\n    const { editMode, editText } = this.state;\r\n\r\n    return (\r\n      <li>\r\n        {editMode ? (\r\n          <input\r\n            type=\"text\"\r\n            value={editText}\r\n            onChange={this.onChangeEditText}\r\n          />\r\n        ) : (\r\n          <span>\r\n            <strong>{message.userId}</strong> {message.text}\r\n            {message.editedAt && <span>(Edited)</span>}\r\n          </span>\r\n        )}\r\n\r\n        {authUser.uid === message.userId && (\r\n          <span>\r\n            {editMode ? (\r\n              <span>\r\n                <button onClick={this.onSaveEditText}>Save</button>\r\n                <button onClick={this.onToggleEditMode}>Reset</button>\r\n              </span>\r\n            ) : (\r\n              <button onClick={this.onToggleEditMode}>Edit</button>\r\n            )}\r\n\r\n            {!editMode && (\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => onRemoveMessage(message.uid)}\r\n              >\r\n                Delete\r\n              </button>\r\n            )}\r\n          </span>\r\n        )}\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MessageItem;","import React from 'react';\r\n\r\nimport MessageItem from './MessageItem';\r\n\r\nconst MessageList = ({\r\n  authUser,\r\n  messages,\r\n  onEditMessage,\r\n  onRemoveMessage,\r\n}) => (\r\n  <ul>\r\n    {messages.map(message => (\r\n      <MessageItem\r\n        authUser={authUser}\r\n        key={message.uid}\r\n        message={message}\r\n        onEditMessage={onEditMessage}\r\n        onRemoveMessage={onRemoveMessage}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default MessageList;","import React, { Component } from 'react';\r\n\r\nimport { AuthUserContext } from '../Session';\r\nimport { withFirebase } from '../Firebase';\r\nimport MessageList from './MessageList';\r\n\r\nclass Messages extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      text: '',\r\n      loading: false,\r\n      messages: [],\r\n      limit: 5,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.onListenForMessages();\r\n  }\r\n\r\n  onListenForMessages = () => {\r\n    this.setState({ loading: true });\r\n\r\n    this.props.firebase\r\n      .messages()\r\n      .orderByChild('createdAt')\r\n      .limitToLast(this.state.limit)\r\n      .on('value', snapshot => {\r\n        const messageObject = snapshot.val();\r\n\r\n        if (messageObject) {\r\n          const messageList = Object.keys(messageObject).map(key => ({\r\n            ...messageObject[key],\r\n            uid: key,\r\n          }));\r\n\r\n          this.setState({\r\n            messages: messageList,\r\n            loading: false,\r\n          });\r\n        } else {\r\n          this.setState({ messages: null, loading: false });\r\n        }\r\n      });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.firebase.messages().off();\r\n  }\r\n\r\n  onChangeText = event => {\r\n    this.setState({ text: event.target.value });\r\n  };\r\n\r\n  onCreateMessage = (event, authUser) => {\r\n    this.props.firebase.messages().push({\r\n      text: this.state.text,\r\n      userId: authUser.uid,\r\n      createdAt: this.props.firebase.serverValue.TIMESTAMP,\r\n    });\r\n\r\n    this.setState({ text: '' });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onEditMessage = (message, text) => {\r\n    const { uid, ...messageSnapshot } = message;\r\n\r\n    this.props.firebase.message(message.uid).set({\r\n      ...messageSnapshot,\r\n      text,\r\n      editedAt: this.props.firebase.serverValue.TIMESTAMP,\r\n    });\r\n  };\r\n\r\n  onRemoveMessage = uid => {\r\n    this.props.firebase.message(uid).remove();\r\n  };\r\n\r\n  onNextPage = () => {\r\n    this.setState(\r\n      state => ({ limit: state.limit + 5 }),\r\n      this.onListenForMessages,\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { text, messages, loading } = this.state;\r\n\r\n    return (\r\n      <AuthUserContext.Consumer>\r\n        {authUser => (\r\n          <div>\r\n            {!loading && messages && (\r\n              <button type=\"button\" onClick={this.onNextPage}>\r\n                More\r\n              </button>\r\n            )}\r\n\r\n            {loading && <div>Loading ...</div>}\r\n\r\n            {messages && (\r\n              <MessageList\r\n                authUser={authUser}\r\n                messages={messages}\r\n                onEditMessage={this.onEditMessage}\r\n                onRemoveMessage={this.onRemoveMessage}\r\n              />\r\n            )}\r\n\r\n            {!messages && <div>There are no messages ...</div>}\r\n\r\n            <form\r\n              onSubmit={event =>\r\n                this.onCreateMessage(event, authUser)\r\n              }\r\n            >\r\n              <input\r\n                type=\"text\"\r\n                value={text}\r\n                onChange={this.onChangeText}\r\n              />\r\n              <button type=\"submit\">Send</button>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </AuthUserContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(Messages);\r\n","import Messages from './Messages';\r\n\r\nexport default Messages;","import React from 'react';\r\nimport { Card, Row, Result } from 'antd';\r\nimport { withAuthorization } from '../Session';\r\nimport { DesktopOutlined } from '@ant-design/icons';\r\nimport { withEmailVerification } from '../Session';\r\nimport { compose } from 'recompose';\r\nimport Messages from '../Messages';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n      <Card bordered={false}>\r\n        <Row justify=\"center\">\r\n          <Result\r\n            icon={<DesktopOutlined />}\r\n            title=\"The Home Page is accessible by every signed in user.\"\r\n          />\r\n        </Row>\r\n      </Card>\r\n\r\n      <Messages />\r\n    </div>\r\n  );\r\n};\r\nconst condition = (authUser) => !!authUser;\r\n\r\nexport default compose(\r\n  withEmailVerification,\r\n  withAuthorization(condition),\r\n)(Home);\r\n","import React, { Component } from 'react';\r\nimport { Card, Row, List, Col, Typography, Skeleton } from 'antd';\r\nimport { withFirebase } from '../../Firebase';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass UserList extends Component {\r\n  state = { users: [], loading: false };\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n    this.props.firebase.users().on('value', (snapshot) => {\r\n      const usersObject = snapshot.val();\r\n      const usersList = Object.keys(usersObject).map((key) => ({\r\n        ...usersObject[key],\r\n        uid: key,\r\n      }));\r\n      this.setState({ users: usersList, loading: false });\r\n    });\r\n  }\r\n  componentWillUnmount() {\r\n    this.props.firebase.users().off();\r\n  }\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <Row justify=\"center\">\r\n          <h2>UserList</h2>\r\n        </Row>\r\n        <List\r\n          itemLayout=\"horizontal\"\r\n          dataSource={this.state.users}\r\n          renderItem={(item) => (\r\n            <Row justify=\"center\">\r\n              <Col span={10}>\r\n                <Skeleton loading={this.state.loading} active>\r\n                  <List.Item\r\n                    actions={[\r\n                      <Link\r\n                        to={{ pathname: `admin/${item.uid}`, state: { item } }}\r\n                      >\r\n                        Details\r\n                      </Link>,\r\n                    ]}\r\n                  >\r\n                    <List.Item.Meta\r\n                      title={item.username}\r\n                      description={item.email}\r\n                    />\r\n                    <div>\r\n                      {item.roles && (\r\n                        <Typography.Text keyboard>Admin</Typography.Text>\r\n                      )}\r\n                    </div>\r\n                  </List.Item>\r\n                </Skeleton>\r\n              </Col>\r\n            </Row>\r\n          )}\r\n        />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(UserList);\r\n","import React from 'react';\r\nimport { Card, Row, Result } from 'antd';\r\nimport { withAuthorization } from '../Session';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport UserList from './components/userlist';\r\n\r\nconst Admin = () => {\r\n  return (\r\n    <Card bordered={false}>\r\n      <Row justify=\"center\">\r\n        <Result\r\n          icon={<UserOutlined />}\r\n          title=\"The Admin Page is accessible by every signed in admin user.\"\r\n        />\r\n      </Row>\r\n      <UserList />\r\n    </Card>\r\n  );\r\n};\r\nconst condition = (authUser) => authUser && !!authUser.roles['ADMIN'];\r\n\r\nexport default withAuthorization(condition)(Admin);\r\n","import React, { Component } from 'react';\r\nimport { Card, Row } from 'antd';\r\nimport { withFirebase } from '../../Firebase';\r\n\r\nclass UserItem extends Component {\r\n  state = { user: null, loading: false, ...this.props.location.state };\r\n\r\n  componentDidMount() {\r\n    if (this.state.user) {\r\n      return;\r\n    }\r\n    this.setState({ loading: true });\r\n    this.props.firebase\r\n      .user(this.props.match.params.id)\r\n      .on('value', (snapshot) => {\r\n        this.setState({\r\n          user: snapshot.val(),\r\n          loading: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.firebase.user(this.props.match.params.id).off();\r\n  }\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <Row>\r\n          <h2>\r\n            <strong>User:</strong> {this.state.item.username}\r\n          </h2>\r\n        </Row>\r\n        <Row>\r\n          <h2>\r\n            <strong>Email:</strong> {this.state.item.email}\r\n          </h2>\r\n        </Row>\r\n        <Row>\r\n          <h2>\r\n            <strong>Uid:</strong> {this.state.item.uid}\r\n          </h2>\r\n        </Row>\r\n        <Row>\r\n          <h2>\r\n            <strong>Admin:</strong>\r\n            {this.state.item.roles ? <div>Yes</div> : <div>No</div>}\r\n          </h2>\r\n        </Row>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(UserItem);\r\n","import React, { Component } from 'react';\r\n\r\nimport { withFirebase } from '../Firebase';\r\nimport { Card, Row, Typography, Form, Alert, Input, Button } from 'antd';\r\nimport { MailOutlined } from '@ant-design/icons';\r\n\r\nconst ForgotPassword = () => {\r\n  return (\r\n    <div>\r\n      <ForgotPasswordForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nclass ForgotPasswordBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n   this.state = { error: '' };\r\n  }\r\n\r\n  handleFinish = (value) => {\r\n    this.props.firebase\r\n      .doPasswordRest(value.email)\r\n      .then(() => {\r\n        this.props.history.push('/changepassword');\r\n      })\r\n      .catch((error) => this.setState({ error }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card style={{ paddingLeft: '5%' }}>\r\n        <Row style={{ paddingBottom: '1%' }}>\r\n          <Typography.Text underline strong style={{ fontSize: '22px' }}>\r\n            Forgot Password\r\n          </Typography.Text>\r\n        </Row>\r\n        <Row>\r\n          <Form onFinish={this.handleFinish}>\r\n            {this.state.error !== '' ? (\r\n              <Form.Item>\r\n                <Alert message={this.state.error} type=\"error\" showIcon />\r\n              </Form.Item>\r\n            ) : null}\r\n            <Form.Item\r\n              name=\"email\"\r\n              rules={[\r\n                {\r\n                  type: 'email',\r\n                  message: 'The input is not valid E-mail!',\r\n                },\r\n                {\r\n                  required: true,\r\n                  message: 'Please input your E-mail!',\r\n                },\r\n              ]}\r\n            >\r\n              <Input prefix={<MailOutlined />} placeholder=\"E-mail\" />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Resest My password\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Row>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ForgotPassword;\r\n\r\nconst ForgotPasswordForm = withFirebase(ForgotPasswordBase);\r\n\r\nexport { ForgotPasswordForm };","import React, { Component } from 'react';\r\n\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst INITIAL_STATE = {\r\n  passwordOne: '',\r\n  passwordTwo: '',\r\n  error: null,\r\n};\r\n\r\nclass PasswordChangeForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { passwordOne } = this.state;\r\n\r\n    this.props.firebase\r\n      .doPasswordUpdate(passwordOne)\r\n      .then(() => {\r\n        this.props.history.push('/home');\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { passwordOne, passwordTwo, error } = this.state;\r\n\r\n    const isInvalid =\r\n      passwordOne !== passwordTwo || passwordOne === '';\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"New Password\"\r\n        />\r\n        <input\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirm New Password\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Reset My Password\r\n        </button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(PasswordChangeForm);\r\n","import React, { Component } from 'react';\r\nimport { compose } from 'recompose';\r\n\r\nimport {\r\n  AuthUserContext,\r\n  withAuthorization,\r\n  withEmailVerification,\r\n} from '../Session';\r\nimport { withFirebase } from '../Firebase';\r\nimport { ForgotPasswordForm } from '../PasswordForget';\r\nimport PasswordChangeForm from '../PasswordChange';\r\n\r\nconst SIGN_IN_METHODS = [\r\n  {\r\n    id: 'password',\r\n    provider: null,\r\n  },\r\n  {\r\n    id: 'google.com',\r\n    provider: 'googleProvider',\r\n  },\r\n  {\r\n    id: 'facebook.com',\r\n    provider: 'facebookProvider',\r\n  },\r\n  {\r\n    id: 'twitter.com',\r\n    provider: 'twitterProvider',\r\n  },\r\n];\r\n\r\nconst AccountPage = () => (\r\n  <AuthUserContext.Consumer>\r\n    {authUser => (\r\n      <div>\r\n        <h1>Account: {authUser.email}</h1>\r\n        <ForgotPasswordForm />\r\n        <PasswordChangeForm />\r\n        <LoginManagement authUser={authUser} />\r\n      </div>\r\n    )}\r\n  </AuthUserContext.Consumer>\r\n);\r\n\r\nclass LoginManagementBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      activeSignInMethods: [],\r\n      error: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchSignInMethods();\r\n  }\r\n\r\n  fetchSignInMethods = () => {\r\n    this.props.firebase.auth\r\n      .fetchSignInMethodsForEmail(this.props.authUser.email)\r\n      .then(activeSignInMethods =>\r\n        this.setState({ activeSignInMethods, error: null }),\r\n      )\r\n      .catch(error => this.setState({ error }));\r\n  };\r\n\r\n  onSocialLoginLink = provider => {\r\n    this.props.firebase.auth.currentUser\r\n      .linkWithPopup(this.props.firebase[provider])\r\n      .then(this.fetchSignInMethods)\r\n      .catch(error => this.setState({ error }));\r\n  };\r\n\r\n  onDefaultLoginLink = password => {\r\n    const credential = this.props.firebase.emailAuthProvider.credential(\r\n      this.props.authUser.email,\r\n      password,\r\n    );\r\n\r\n    this.props.firebase.auth.currentUser\r\n      .linkAndRetrieveDataWithCredential(credential)\r\n      .then(this.fetchSignInMethods)\r\n      .catch(error => this.setState({ error }));\r\n  };\r\n\r\n  onUnlink = providerId => {\r\n    this.props.firebase.auth.currentUser\r\n      .unlink(providerId)\r\n      .then(this.fetchSignInMethods)\r\n      .catch(error => this.setState({ error }));\r\n  };\r\n\r\n  render() {\r\n    const { activeSignInMethods, error } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        Sign In Methods:\r\n        <ul>\r\n          {SIGN_IN_METHODS.map(signInMethod => {\r\n            const onlyOneLeft = activeSignInMethods.length === 1;\r\n            const isEnabled = activeSignInMethods.includes(\r\n              signInMethod.id,\r\n            );\r\n\r\n            return (\r\n              <li key={signInMethod.id}>\r\n                {signInMethod.id === 'password' ? (\r\n                  <DefaultLoginToggle\r\n                    onlyOneLeft={onlyOneLeft}\r\n                    isEnabled={isEnabled}\r\n                    signInMethod={signInMethod}\r\n                    onLink={this.onDefaultLoginLink}\r\n                    onUnlink={this.onUnlink}\r\n                  />\r\n                ) : (\r\n                  <SocialLoginToggle\r\n                    onlyOneLeft={onlyOneLeft}\r\n                    isEnabled={isEnabled}\r\n                    signInMethod={signInMethod}\r\n                    onLink={this.onSocialLoginLink}\r\n                    onUnlink={this.onUnlink}\r\n                  />\r\n                )}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n        {error && error.message}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst SocialLoginToggle = ({\r\n  onlyOneLeft,\r\n  isEnabled,\r\n  signInMethod,\r\n  onLink,\r\n  onUnlink,\r\n}) =>\r\n  isEnabled ? (\r\n    <button\r\n      type=\"button\"\r\n      onClick={() => onUnlink(signInMethod.id)}\r\n      disabled={onlyOneLeft}\r\n    >\r\n      Deactivate {signInMethod.id}\r\n    </button>\r\n  ) : (\r\n    <button\r\n      type=\"button\"\r\n      onClick={() => onLink(signInMethod.provider)}\r\n    >\r\n      Link {signInMethod.id}\r\n    </button>\r\n  );\r\n\r\nclass DefaultLoginToggle extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { passwordOne: '', passwordTwo: '' };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.onLink(this.state.passwordOne);\r\n    this.setState({ passwordOne: '', passwordTwo: '' });\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      onlyOneLeft,\r\n      isEnabled,\r\n      signInMethod,\r\n      onUnlink,\r\n    } = this.props;\r\n\r\n    const { passwordOne, passwordTwo } = this.state;\r\n\r\n    const isInvalid =\r\n      passwordOne !== passwordTwo || passwordOne === '';\r\n\r\n    return isEnabled ? (\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => onUnlink(signInMethod.id)}\r\n        disabled={onlyOneLeft}\r\n      >\r\n        Deactivate {signInMethod.id}\r\n      </button>\r\n    ) : (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"New Password\"\r\n        />\r\n        <input\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirm New Password\"\r\n        />\r\n\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Link {signInMethod.id}\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst LoginManagement = withFirebase(LoginManagementBase);\r\n\r\nconst condition = authUser => !!authUser;\r\n\r\nexport default compose(\r\n  withEmailVerification,\r\n  withAuthorization(condition),\r\n)(AccountPage);\r\n","import React from 'react';\r\nimport { withAuthentication } from './components/Session';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport Navbar from './components/navbar/navbar';\r\nimport Main from './components/main/main';\r\nimport SignInPage from './components/SignIn';\r\nimport SignUpPage from './components/SignUp';\r\nimport Home from './components/home/home';\r\nimport Admin from './components/admin/admin';\r\nimport UserItem from './components/admin/components/userItem';\r\nimport AccountPage from './components/account';\r\nimport ForgotPassword from './components/PasswordForget';\r\nimport PasswordChangeForm from './components/PasswordChange';\r\n\r\nconst App = () => {\r\n  return (\r\n  \t<Router>\r\n\t\t<div>\r\n\t\t\t<Navbar />\r\n\t      \t<Route exact path=\"/\" component={Main} />\r\n\t      \t<Route path=\"/Home\" component={Home} />\r\n\t\t    <Route path=\"/admin\" component={Admin} />\r\n\t\t    <Route path=\"/admin/:id\" component={UserItem} />\r\n        \t<Route path=\"/account\" component={AccountPage} />\r\n\t      \t<Route path=\"/signin\" component={SignInPage} />\r\n\t      \t<Route path=\"/signup\" component={SignUpPage} />\r\n\t        <Route path=\"/forgotpassword\" component={ForgotPassword} />\r\n\t\t   \t<Route path=\"/changepassword\" component={PasswordChangeForm} />\r\n\t\t</div>\r\n\t</Router>\r\n  );\r\n};\r\n\r\nexport default withAuthentication(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\nimport Firebase, { FirebaseContext } from './components/Firebase';\r\nimport 'antd/dist/antd.css';\r\n\r\nReactDOM.render(\r\n  <FirebaseContext.Provider value={new Firebase()}>\r\n      <App />\r\n  </FirebaseContext.Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}